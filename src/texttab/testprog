#!/usr/bin/env python3
import click

from const import AVAILABLE_BORDERS
from table import BasicTable


class TestFormatter(object):
    @classmethod
    def format(cls, value, col):
        format_string = "\033[0m"
        reset = False
        rv = int(value)
        if rv >= 10:
            format_string += "\033[5m"  # Blink
            format_string += "\033[1m"  # Bold
            format_string += "\033[32m"  # Green
            reset = True
        elif rv < 10 and rv > 1:
            format_string += "\033[34m"  # Blue??
            reset = True
        else:
            format_string += "\033[31m"  # Red
            reset = True
        return format_string, str(value), reset


example_columns = [
    {
        "label": "Name",
        "width": 25,
        "align": "left",
        "fg":    "magenta",
        "bg":    "black",
        "head_bg": "white",
        "head_fg": "blue",
    },
    {
        "label": "Email",
        "width": 32,
        "align": "centre",
        "fg":    "yellow",
        "bg":    "black",
        "head_bg": "white",
        "head_fg": "blue",
    },
    {
        "label": "Years-of-Service",
        "align": "right",
        "fg": "white",
        # "fg":    "blue",
        "bg":    "black",
        "head_bg": "white",
        "head_fg": "blue",
        "formatter": TestFormatter,
    }
]

example_data = [
    ("Owen Klan", "oklan@example.com", 1),
    ("Barry Badlow", "bbadlow@example.com", 13),
    ("Genevive Goodhigh Really-Long-Named", "ggoodhigh@example.com", 2),
]


@click.command()
@click.option("--fg", "fg",
              type=str, metavar="FG_COLOUR",
              default=None, show_default=None,
              help=("Set table foreground colour."))
@click.option("--bg", "bg",
              type=str, metavar="BG_COLOUR",
              default=None, show_default=None,
              help=("Set table background colour."))
@click.option("--head-fg", "head_fg",
              type=str, metavar="FG_COLOUR",
              default=None, show_default=None,
              help=("Set table heading foreground colour."))
@click.option("--head-bg", "head_bg",
              type=str, metavar="BG_COLOUR",
              default=None, show_default=None,
              help=("Set table heading background colour."))
def main(fg, bg, head_fg, head_bg):
    print(("Simple test program, designed to demonstrate alignment of "
           "columns as well as border styles.\n"))
    print("Border styles are available from 'const.AVAILABLE_BORDERS' list.\n")
    for border_style in AVAILABLE_BORDERS:
        print(f"Table style: {border_style}")
        if fg is not None:
            print(f"Foreground Colour:  {fg}")
        if bg is not None:
            print(f"Background Colour:  {bg}")

        bt = BasicTable(
            columns=example_columns,
            border=border_style,
            fg=fg, bg=bg,
            head_fg=head_fg, head_bg=head_bg,
        )

        for row in example_data:
            bt.add_row(row)

        print("\n".join(bt.render()))
        print("")


if __name__ == "__main__":
    main()
